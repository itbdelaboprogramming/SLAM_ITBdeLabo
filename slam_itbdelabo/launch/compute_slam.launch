<launch>
    <arg name="use_simulator" default="false"/>
    
    <group if="$(arg use_simulator)">
        <arg name="model" default="burger"/>
        <arg name="slam_methods" default="gmapping"/>
        <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
        <arg name="open_rviz" default="true"/>
        <arg name="multi_robot_name" default=""/>
        <arg name="set_base_frame" default="base_footprint"/>
        <arg name="set_odom_frame" default="odom"/>
        <arg name="set_map_frame"  default="map"/>

        <include file="$(find turtlebot3_bringup)/launch/includes/description.launch.xml">
            <arg name="model" value="$(arg model)" />
        </include>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="50.0" />
            <param name="tf_prefix" value="$(arg multi_robot_name)"/>
        </node>

        <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
            <param name="base_frame" value="$(arg set_base_frame)"/>
            <param name="odom_frame" value="$(arg set_odom_frame)"/>
            <param name="map_frame"  value="$(arg set_map_frame)"/>
            <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
        </node>

        <group if="$(arg open_rviz)"> 
            <node pkg="rviz" type="rviz" name="rviz" required="true"
                args="-d $(find turtlebot3_slam)/rviz/turtlebot3_$(arg slam_methods).rviz"/>
        </group>
    </group>

    <group unless="$(arg use_simulator)">
        <include file="$(find slam_itbdelabo_rviz)/launch/slam_hector.launch" pass_all_args="true"/>
    </group>
    
    <node pkg="robot_pose_publisher" type="robot_pose_publisher" name="robot_pose_publisher_node" output="screen"></node>
</launch>